//generates a binary of the image with the given color threshold  and counts the clustering of pixels
macro "CD68 Count [a]" {
run("RGB Color");
selectWindow("Image_CH1.TIF (RGB)");
run("Subtract Background...", "rolling=5 sliding");
Dialog.create("Thresholding");
Dialog.addSlider("Threshold", 0, 255, 37);
Dialog.show();
threshold = Dialog.getNumber(); 
thresholdString=""+threshold;
// Color Thresholder 1.50i
// Autogenerated macro, single images only!
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("HSB Stack");
run("Stack to Images");
selectWindow("Hue");
rename("0");
selectWindow("Saturation");
rename("1");
selectWindow("Brightness");
rename("2");
min[0]=0;
max[0]=255;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=thresholdString;
max[2]=255;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop"){
    run("Invert");
  }
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
rename(a);
//Analyze Particles
run("Analyze Particles...", "size=15-Infinity pixel show=Outlines display summarize");
selectWindow("Image_CH1.TIF (RGB)");
close();
selectWindow("Summary");
}

//program for accounting for false positives 
macro "CD68_CC [s]"{
Dialog.create("False Positives");
Dialog.addString("Brightness Threshold: ", 0);
Dialog.addNumber("Count points: ", 0);
Dialog.addCheckbox("More points?", true);
Dialog.show();
totalMinusArea = 0;
numberFalse=1;
morePoints = Dialog.getCheckbox();
thresholdValue = Dialog.getString();
falsePositives = Dialog.getNumber();
pointArea = getResult("Area", falsePositives-1);
selectWindow("Summary");
//extracts information from summary window
lines=split(getInfo(), "\n");
headings = split(lines[0], "\t");
values=split(lines[1], "\t");
totalArea = parseInt(values[2]);
percentArea = values[4];

if (morePoints == false)
  {
  correctedArea();
  }
if (morePoints == true){
  numberFalse=numberFalse+1;
  addPoint();
  correctedArea();
  }
  
//gives the area% after subtracting area of false positives
function correctedArea(){
  print("Threshold Value: " +thresholdValue);
  totalMinusArea = totalArea - pointArea;
  cArea = totalMinusArea*percentArea/totalArea;
  print("Corrected Area: " + totalMinusArea);
  print("Corrected Percent Area: " + cArea + "%");
  }

//allows the user to input additional false positives. 
function addPoint(){
  Dialog.create("False Positives");
  Dialog.addNumber("Count points: ", 0);
  Dialog.addCheckbox("More points?", true);
  Dialog.show();
  falsePositives = Dialog.getNumber();
  morePoints = Dialog.getCheckbox();
  n = getResult("Area", falsePositives);
  //pointArea stores the increasing int gained from repeated point entries
  pointArea = pointArea+n;
  if (morePoints == true){
    addPoint();
  }
  }
}
